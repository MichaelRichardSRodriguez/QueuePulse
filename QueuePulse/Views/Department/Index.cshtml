@model IEnumerable<Department>

@{
	ViewData["Title"] = "Department List";
	var recordCount = ViewData["DepartmentCount"] as int? ?? 0;
	var contentStatusStyle = string.Empty;
}

<div class="container mt-4">
	<div class="row card p-3 border-top border-2 shadow rounded" style="background-color:azure;">
		<h4><strong>Department List</strong></h4>
		<div class="d-flex mt-2 justify-content-between align-items-center">
			<a class="btn btn-primary" asp-action="Create">Create New</a>

			<div class="d-flex ms-auto align-items-center">
				<!-- Status Filter Dropdown -->
				<div class="input-group w-auto">
					<label class="form-control border-0" style="background-color: transparent;width:110px;">Filter Status</label>
					<select id="statusFilter" class="form-select" style="width:110px;">
						<option value="All">All</option>
						<option value="Active">Active</option>
						<option value="Inactive">Inactive</option>
					</select>
				</div>

				<!-- Search Input -->
				<div class="input-group w-auto ms-2">
					<input type="text" id="searchInput" class="form-control" placeholder="Search here..." />
					<a id="searchButton" class="btn btn-primary">Search</a>
				</div>
			</div>
		</div>
		<div class="card-body">
			<table id="departmentTable" class="table">
				<thead>
					<tr>
						<th>
							@Html.DisplayNameFor(model => model.Name)
							<span class="fa fa-sort-up"></span>
							@* <span class="fa fa-sort-down"></span> *@
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Description)
							<span class="fa fa-sort-up"></span>
							@* <span class="fa fa-sort-down"></span> *@
						</th>
						<th>
							@Html.DisplayNameFor(model => model.Status)
							<span class="fa fa-sort-up"></span>
							@* <span class="fa fa-sort-down"></span> *@
						</th>
						<th></th>
					</tr>
				</thead>
				<tbody>
					<!-- Data will be populated here dynamically using javascript -->
				</tbody>
			</table>
		</div>

@* 		<!-- Pagination -->

		<div class="row">
			<div class="d-flex ms-auto">
				<div class="input-group">
					@if (recordCount > 0)
					{
					<a class="btn btn-primary" href="#">&laquo;</a>
					@for (int i = 0; i < recordCount; i++)
					{
						<a id="page@i" class="btn btn-primary">@i.ToString()</a>
					}
					<a class="btn btn-primary" href="#">&raquo;</a>

					}

					<div class="ms-auto">
						<div class="input-group">
							<label class="form-control border-0" style="background-color: transparent;width:95px;">Page Size:</label>
							<select id="recordPerPage" class="form-select" style="width:70px;">
								<option value="10">10</option>
								<option value="15">15</option>
								<option value="20">20</option>
								<option value="25">25</option>
								<option value="30">30</option>
								<option value="35">35</option>
								<option value="40">40</option>
							</select>
						</div>
					</div>
				</div>
			</div>
		</div>
		
		<!-- End of Pagination --> *@

		<!-- REVISED PAGINATION *****************-->
		@* <div id="pagination">
			<ul class="pagination">
				@if (Model.CurrentPage > 1)
				{
					<li><a href="#" data-page="1">First</a></li>
					<li><a href="#" data-page="@((Model.CurrentPage - 1))">Previous</a></li>
				}

				@for (int i = 1; i <= Model.TotalPages; i++)
				{
					<li class="@(i == Model.CurrentPage ? "active" : "")">
						<a href="#" data-page="@i">@i</a>
					</li>
				}

				@if (Model.CurrentPage < Model.TotalPages)
				{
					<li><a href="#" data-page="@((Model.CurrentPage + 1))">Next</a></li>
					<li><a href="#" data-page="@Model.TotalPages">Last</a></li>
				}
			</ul>
		</div> *@
		<!--*************************************-->

		

	</div>
</div>

<!-- Javascript for handling Departments Index UI -->
<script src="~/js/departmentsIndex.js"></script>

