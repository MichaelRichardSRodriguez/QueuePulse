@model IEnumerable<QueuePulse.Models.Entities.Profile>

@{
    ViewData["Title"] = "Index";
}


@{
    ViewData["Title"] = "Profile List";
    var recordCount = ViewData["DepartmentCount"] as int? ?? 0;
    var contentStatusStyle = string.Empty;
}


<div class="container mt-4">
	<div class="row card p-3 border-top border-2 shadow rounded" style="background-color:azure;">
		<h4><strong>Profile List</strong></h4>
		<div class="d-flex mt-2 justify-content-between align-items-center">
			<a class="btn btn-primary" asp-action="Create">Create New</a>

			<div class="d-flex ms-auto align-items-center">
				<!-- Status Filter Dropdown -->
				<div class="input-group w-auto">
					<label class="form-control border-0" style="background-color: transparent;width:110px;">Filter Status</label>
					<select id="statusFilter" class="form-select" style="width:110px;">
						<option value="All">All</option>
						<option value="Active">Active</option>
						<option value="Inactive">Inactive</option>
					</select>
				</div>

				<!-- Search Input -->
				<div class="input-group w-auto ms-2">
					<input type="text" id="searchInput" class="form-control" placeholder="Search here..." />
					<a id="searchButton" class="btn btn-primary">Search</a>
				</div>
			</div>
		</div>
		<div class="card-body">
			<table id="profileTable" class="table">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.Name)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Department)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.Status)
                        </th>

                        <th></th>
                    </tr>
                </thead>
                <tbody>
                    <!-- Data will be populated here dynamically using javascript -->
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>
                                @Html.DisplayFor(modelItem => item.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Department.Name)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.Status)
                            </td>

                            <td>
                                <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                                <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
			</table>
		</div>
	</div>
</div>